<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.elianacc.yurayura.dao.SysManagerMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="pers.elianacc.yurayura.entity.SysManager">
        <id column="id" property="id"/>
        <result column="manager_name" property="managerName"/>
        <result column="manager_password" property="managerPassword"/>
        <result column="manager_pass_salt" property="managerPassSalt"/>
        <result column="manager_status" property="managerStatus"/>
        <result column="manager_org" property="managerOrg"/>
        <result column="manager_create_time" property="managerCreateTime"/>
        <result column="manager_update_time" property="managerUpdateTime"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, manager_name, manager_password, manager_pass_salt, manager_status, manager_org, manager_create_time, manager_update_time
    </sql>

    <select id="getManagerRolePermission" resultType="java.lang.String">
        SELECT
            DISTINCT p.permission_code permissionsStr
        FROM
            yurayura_sys_manager_role mr
                LEFT JOIN yurayura_sys_role_permission rp ON mr.role_id = rp.role_id
                LEFT JOIN yurayura_sys_role r ON mr.role_id = r.id
                LEFT JOIN yurayura_sys_permission p ON rp.permission_id = p.id
        WHERE
            mr.manager_id = #{managerId}
          AND r.role_status = 1
          AND p.permission_status = 1
    </select>

    <insert id="insertBatchManagerRole">
        insert into yurayura_sys_manager_role
        (manager_id, role_id) VALUES
        <foreach collection="roleIdList" item="roleId" index="index" separator=",">
            (#{managerId},#{roleId})
        </foreach>
    </insert>

    <delete id="deleteManagerRoleByManagerId">
        delete from yurayura_sys_manager_role where manager_id = #{managerId}
    </delete>

    <delete id="deleteManagerRoleByRoleId">
        delete from yurayura_sys_manager_role where role_id = #{roleId}
    </delete>

    <select id="getManagerAndRoleListBySelectDTO" resultType="pers.elianacc.yurayura.vo.SysManagerAndRoleVO">
        SELECT
        mng.id id,
        mng.manager_name managerName,
        mng.manager_status managerStatus,
        mng.manager_org managerOrg,
        o.org_name managerOrgName,
        DATE_FORMAT(mng.manager_create_time,'%Y-%m-%d %H:%i:%s') managerCreateTime,
        DATE_FORMAT(mng.manager_update_time,'%Y-%m-%d %H:%i:%s') managerUpdateTime,
        GROUP_CONCAT(r.id) roleIdsStr,
        GROUP_CONCAT(r.role_name) roleNamesStr
        FROM
        yurayura_sys_manager mng
        LEFT JOIN yurayura_sys_manager_role mr ON mng.id = mr.manager_id
        LEFT JOIN yurayura_sys_role r ON mr.role_id = r.id
        left join yurayura_sys_org o on mng.manager_org = o.id
        <where>
            <if test="managerName != null and managerName != ''">
                and mng.manager_name like CONCAT('%',#{managerName},'%')
            </if>
            <if test="managerStatus != null">
                and mng.manager_status = #{managerStatus}
            </if>
            <if test="managerOrg != null">
                and mng.manager_org = #{managerOrg}
            </if>
        </where>
        GROUP BY
        mng.id
    </select>

</mapper>
